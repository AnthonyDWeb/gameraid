(()=>{var e={8495:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>T});var n=r(6769),a=r(3426),i=r(5222),o=r(8975),l=r(5004),s=r(9385),c=r(6792).default.create({maincontainer:{flex:1,alignItems:"center",backgroundColor:"gray",justifyContent:"space-around"},container:{flex:1,padding:15,alignItems:"center",backgroundColor:"gray"},text:{color:"white",fontSize:18,marginHorizontal:10},button:{color:"white",borderRadius:8,shadowColor:"silver",shadowOffset:{width:2,height:2},shadowOpacity:1,paddingVertical:5,paddingHorizontal:10,fontSize:20,backgroundColor:"black",textAlign:"center",margin:20},inputContainer:{display:"flex",alignItems:"center",flexDirection:"row",margin:15},inputValue:{minWidth:50,color:"black",borderRadius:10,textAlign:"center",backgroundColor:"white"},resultContainer:{display:"flex",alignItems:"center",width:"80%",paddingTop:30,marginVertical:20,borderTopWidth:1,borderTopColor:"white"}}),u=r(6264),d=r(1054),f=r(2629);function p(e){var t=e.label,r=e.action;return(0,f.jsx)(u.default,{style:function(e){return[{opacity:e.pressed?.5:1}]},onPress:r,children:(0,f.jsx)(d.default,{style:c.button,children:t})})}function g(e){var t=e.navigation;return(0,f.jsxs)(s.default,{style:c.maincontainer,children:[(0,f.jsx)(p,{label:"Random Fight",action:function(){return t.navigate("Random Fight")}}),(0,f.jsx)(p,{label:"Fight Calculator",action:function(){return t.navigate("Fight Calculator")}})]})}var b=r(4942),h=r(9439),y=r(2371),j=r.n(y),m=r(6591),x=function(e){var t=e.label,r=e.datakey,n=e.action;return(0,f.jsxs)(s.default,{style:c.inputContainer,children:[(0,f.jsx)(m.default,{style:c.text,value:t,editable:!1}),(0,f.jsx)(m.default,{style:c.inputValue,placeholder:"0",placeholderTextColor:"black",keyboardType:"numeric",onChangeText:function(e){return n(r,parseInt(e))}})]})};function O(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function v(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?O(Object(r),!0).forEach((function(t){(0,b.default)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):O(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function w(){var e=(0,l.useState)(!1),t=(0,h.default)(e,2),r=t[0],n=t[1],a=(0,l.useState)({goalpoint:0,playerpoint:0,fightpoint:0,life:0}),i=(0,h.default)(a,2),o=i[0],u=i[1],g=(0,l.useState)({goalsuccess:!1,playerpoint:0,numberfight:0,restlife:0}),y=(0,h.default)(g,2),m=y[0],O=y[1],w=function(e,t){return u(v(v({},o),{},(0,b.default)({},e,t)))};return(0,f.jsxs)(s.default,{style:c.container,children:[(0,f.jsx)(x,{label:"Points du Joueur",datakey:"playerpoint",action:w}),(0,f.jsx)(x,{label:"Nombre de vie(s)",datakey:"life",action:w}),(0,f.jsx)(x,{label:"Point(s) par combat",datakey:"fightpoint",action:w}),(0,f.jsx)(x,{label:"Objectif de points",datakey:"goalpoint",action:w}),(0,f.jsx)(p,{label:"Valider",action:function(){return function(){var e=j()(m),t=o.goalpoint-o.playerpoint,a=Math.ceil(t/o.fightpoint);a<=o.life?(e.goalsuccess=!0,e.numberfight=a,e.playerpoint=o.fightpoint*a,e.restlife=o.life-a,e.maxpoint=o.life*o.fightpoint):(e.goalsuccess=!1,e.playerpoint=o.life*o.fightpoint+o.playerpoint,e.numberfight=o.life,e.restlife=0,e.missinglife=Math.ceil((o.goalpoint-e.playerpoint)/o.fightpoint)),r||n(!0),O(e)}()}}),r&&(0,f.jsxs)(s.default,{style:c.resultContainer,children:[(0,f.jsxs)(d.default,{style:c.text,children:["Objectif atteint: ",m.goalsuccess?"Oui":"Non"]}),(0,f.jsxs)(d.default,{style:c.text,children:["Points du Joueur: ",m.playerpoint]}),(0,f.jsxs)(d.default,{style:c.text,children:["Nombre de Combat: ",m.numberfight]}),(0,f.jsxs)(d.default,{style:c.text,children:["Vie restante: ",m.restlife]}),!m.goalsuccess&&(0,f.jsxs)(d.default,{style:c.text,children:["Vie Manquante: ",m.missinglife]}),m.goalsuccess&&(0,f.jsxs)(d.default,{style:c.text,children:["Maximum: ",m.maxpoint," points"]})]})]})}function k(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function P(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?k(Object(r),!0).forEach((function(t){(0,b.default)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):k(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function C(){var e=(0,l.useState)(!1),t=(0,h.default)(e,2),r=(t[0],t[1],(0,l.useState)({players:0,columns:0,lines:0,characters:0})),n=(0,h.default)(r,2),a=n[0],i=n[1],o=(0,l.useState)(),u=(0,h.default)(o,2),d=(u[0],u[1],function(e,t){return i(P(P({},a),{},(0,b.default)({},e,t)))});return(0,f.jsxs)(s.default,{style:c.container,children:[(0,f.jsx)(x,{label:"Nombre de Joueurs",datakey:"players",action:d}),(0,f.jsx)(x,{label:"Nombre de colonnes",datakey:"columns",action:d}),(0,f.jsx)(x,{label:"Nombre de ligne",datakey:"lines",action:d}),(0,f.jsx)(x,{label:"Nombre de personnages",datakey:"characters",action:d}),(0,f.jsx)(p,{label:"Valider",action:function(){return"getResult()"}})]})}function S(){return(0,f.jsx)(s.default,{children:(0,f.jsx)(d.default,{children:"Loading..."})})}function T(){var e=(0,o.default)(),t=e.Navigator,r=e.Screen,l={prefixes:[n.createURL("/"),"https://anthonydweb.github.io/gameraid/"],config:{screens:{Homepage:"gameraid/","Fight Calculator":"gameraid/fightcalculator","Random Fight":"gameraid/randomfight"}}};return(0,f.jsxs)(i.default,{linking:l,fallback:(0,f.jsx)(S,{}),children:[(0,f.jsx)(a.default,{translucent:!0,hidden:!0}),(0,f.jsxs)(t,{screenOptions:{headerTitleAlign:"center",headerTitleStyle:{fontWeight:"bold"},headerStyle:{backgroundColor:"gray"},headerTintColor:"white"},children:[(0,f.jsx)(r,{name:"Homepage",component:g}),(0,f.jsx)(r,{name:"Fight Calculator",component:w}),(0,f.jsx)(r,{name:"Random Fight",component:C})]})]})}},4654:()=>{}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var i=t[n]={id:n,loaded:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}r.m=e,(()=>{var e=[];r.O=(t,n,a,i)=>{if(!n){var o=1/0;for(u=0;u<e.length;u++){for(var[n,a,i]=e[u],l=!0,s=0;s<n.length;s++)(!1&i||o>=i)&&Object.keys(r.O).every((e=>r.O[e](n[s])))?n.splice(s--,1):(l=!1,i<o&&(o=i));if(l){e.splice(u--,1);var c=a();void 0!==c&&(t=c)}}return t}i=i||0;for(var u=e.length;u>0&&e[u-1][2]>i;u--)e[u]=e[u-1];e[u]=[n,a,i]}})(),r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e={179:0};r.O.j=t=>0===e[t];var t=(t,n)=>{var a,i,[o,l,s]=n,c=0;if(o.some((t=>0!==e[t]))){for(a in l)r.o(l,a)&&(r.m[a]=l[a]);if(s)var u=s(r)}for(t&&t(n);c<o.length;c++)i=o[c],r.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return r.O(u)},n=self.webpackChunkweb=self.webpackChunkweb||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var n=r.O(void 0,[795],(()=>r(6271)));n=r.O(n)})();
//# sourceMappingURL=main.a589406c.js.map